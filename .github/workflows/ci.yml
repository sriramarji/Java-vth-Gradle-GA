name: CI - Gradle Docker ECR

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      #AWS_REGION: us-east-1  # âœ… Change if using a different region
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: evs-sonarorganization_Java-vth-Gradle-GA
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Generate Gradle Wrapper (if not in repo)
      run: gradle wrapper

    - name: Build with Gradle
      run: ./gradlew build
      
    #- name: Run SonarQube Analysis
    # run: /gradlew sonarqube
    # env:
    #  SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}
    #   SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
    #  SONAR_SCANNER_OPTS: |
    #    -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker Image
      run: |
        docker build -t hello-java-app .
        docker tag hello-java-app:latest ${{ steps.login-ecr.outputs.registry }}/hello-java-app:latest
    - name: Push Docker Image to ECR
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/hello-java-app:latest
