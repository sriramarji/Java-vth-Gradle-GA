name: CI - Gradle Docker ECR

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ] # Optional: Trigger on pull requests as well
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1  # âœ… Change if using a different region
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Add SonarCloud token as a secret
      SONAR_HOST_URL: https://sonarcloud.io

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Important for SonarCloud to analyze all history

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Generate Gradle Wrapper (if not in repo)
      run: gradle wrapper

    - name: Build and Analyze with Gradle SonarQube Plugin
      run: ./gradlew build sonarqube -Dsonar.host.url=${{ env.SONAR_HOST_URL }} -Dsonar.login=${{ env.SONAR_TOKEN }} -Dsonar.organization=sriramarji
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Ensure token is available

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker Image
      run: |
        docker build -t hello-java-app .
        docker tag hello-java-app:latest ${{ steps.login-ecr.outputs.registry }}/hello-java-app:latest

    - name: Push Docker Image to ECR
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/hello-java-app:latest
